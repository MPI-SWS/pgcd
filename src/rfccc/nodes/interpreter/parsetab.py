
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORLTLEGTGEEQNErightNOTleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSSINTANCOSABSSKIP SEND RECEIVE IF THEN ELSE WHILE DO SIN TAN COS ABS SQRT PRINT ID MOTION COMPONENT MSGTYPE ICONST DCONST SCONST BCONST PLUS MINUS TIMES DIVIDE MOD OR AND NOT LT LE GT GE EQ NE EQUALS LPAREN RPAREN LBRACE RBRACE COMMA SEMI COLON DOTstatement : SKIPstatement : PRINT LPAREN args RPARENstatement : ID COLON EQUALS LBRACE keyval RBRACE\n                     | ID DOT ID COLON EQUALS expression\n                     | ID COLON EQUALS expressionkeyval : keyval COMMA keyval\n                  | SCONST COLON expressionstatement : RECEIVE LPAREN MOTION LPAREN args RPAREN RPAREN LBRACE actions RBRACE\n                     | RECEIVE LPAREN MOTION RPAREN LBRACE actions RBRACEactions : actions COMMA actions\n                   | LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPARENstatement : statement SEMI statementstatement : IF expression THEN LBRACE statement RBRACE ELSE LBRACE statement RBRACEstatement : WHILE expression DO LBRACE statement RBRACEstatement : MOTION LPAREN args RPAREN\n                     | MOTIONargs : args COMMA args\n                 | expressionstatement : SEND LPAREN COMPONENT COMMA MSGTYPE COMMA expression RPARENexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : MINUS expression %prec UMINUS\n                      | SIN LPAREN expression RPAREN\n                      | COS LPAREN expression RPAREN\n                      | TAN LPAREN expression RPAREN\n                      | ABS LPAREN expression RPAREN\n                      | SQRT LPAREN expression RPAREN\n                      | NOT expressionexpression : LPAREN expression RPARENexpression : ICONST\n                      | DCONST\n                      | SCONST\n                      | BCONSTexpression : ID\n                      | ID DOT ID'
    
_lr_action_items = {'DO':([11,13,15,18,20,23,34,40,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,95,96,97,98,99,],[-42,-43,-44,-41,-45,42,-33,-39,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-35,-34,-36,-37,-38,]),'COS':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'THEN':([11,13,15,18,20,30,34,40,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,95,96,97,98,99,],[-42,-43,-44,-41,-45,62,-33,-39,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-35,-34,-36,-37,-38,]),'WHILE':([0,26,72,93,130,138,],[1,1,1,1,1,1,]),'DCONST':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'SQRT':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'PRINT':([0,26,72,93,130,138,],[2,2,2,2,2,2,]),'MINUS':([1,8,11,13,14,15,18,19,20,22,23,24,25,30,32,33,34,35,36,37,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,56,60,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,89,91,95,96,97,98,99,106,115,116,118,124,126,],[14,14,-42,-43,14,-44,-41,14,-45,14,52,14,14,52,14,14,-33,14,14,52,14,52,14,14,14,14,14,14,14,14,14,14,14,14,14,52,14,52,52,52,52,-40,-46,52,52,52,52,52,52,52,-22,52,-20,-24,-21,52,-23,14,14,52,-35,-34,-36,-37,-38,14,14,52,14,52,52,]),'DOT':([7,20,],[29,38,]),'DIVIDE':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,54,54,-33,54,54,54,54,54,54,54,-40,-46,54,54,54,54,54,54,54,-22,54,54,-24,54,54,-23,54,-35,-34,-36,-37,-38,54,54,54,]),'LE':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,43,43,-33,43,-39,43,43,43,43,43,-40,-46,43,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,43,-35,-34,-36,-37,-38,43,43,43,]),'RPAREN':([11,13,15,18,20,34,37,40,55,56,57,59,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,95,96,97,98,99,101,103,112,126,140,],[-42,-43,-44,-41,-45,-33,68,-39,86,-18,87,88,95,96,97,98,-40,-46,99,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-35,-34,-36,-37,-38,-17,112,122,131,141,]),'SEMI':([3,4,6,11,13,15,18,20,34,40,58,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,91,95,96,97,98,99,100,107,109,113,116,119,131,134,136,137,139,],[-16,26,-1,-42,-43,-44,-41,-45,-33,-39,26,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-2,-15,-5,-35,-34,-36,-37,-38,26,26,-14,-3,-4,-9,-19,26,-8,-13,26,]),'NE':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,53,53,-33,53,-39,53,53,53,53,53,-40,-46,53,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,53,-35,-34,-36,-37,-38,53,53,53,]),'SCONST':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,90,106,114,115,118,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,105,13,105,13,13,]),'SIN':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MOTION':([0,26,27,72,93,130,138,],[3,3,59,3,3,3,3,]),'LT':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,45,45,-33,45,-39,45,45,45,45,45,-40,-46,45,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,45,-35,-34,-36,-37,-38,45,45,45,]),'COLON':([7,61,105,],[28,92,115,]),'MSGTYPE':([94,111,],[108,121,]),'BCONST':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'TAN':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([3,4,6,11,13,15,18,20,34,40,58,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,91,95,96,97,98,99,109,113,116,119,131,136,137,],[-16,0,-1,-42,-43,-44,-41,-45,-33,-39,-12,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-2,-15,-5,-35,-34,-36,-37,-38,-14,-3,-4,-9,-19,-8,-13,]),'PLUS':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,50,50,-33,50,50,50,50,50,50,50,-40,-46,50,50,50,50,50,50,50,-22,50,-20,-24,-21,50,-23,50,-35,-34,-36,-37,-38,50,50,50,]),'GT':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,49,49,-33,49,-39,49,49,49,49,49,-40,-46,49,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,49,-35,-34,-36,-37,-38,49,49,49,]),'RBRACE':([3,6,11,13,15,18,20,34,40,58,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,86,87,91,95,96,97,98,99,100,104,107,109,110,113,116,119,123,124,127,131,133,134,136,137,139,141,],[-16,-1,-42,-43,-44,-41,-45,-33,-39,-12,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-2,-15,-5,-35,-34,-36,-37,-38,109,113,117,-14,119,-3,-4,-9,-6,-7,-10,-19,136,137,-8,-13,140,-11,]),'RECEIVE':([0,26,72,93,130,138,],[5,5,5,5,5,5,]),'SKIP':([0,26,72,93,130,138,],[6,6,6,6,6,6,]),'EQUALS':([28,92,],[60,106,]),'TIMES':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,48,48,-33,48,48,48,48,48,48,48,-40,-46,48,48,48,48,48,48,48,-22,48,48,-24,48,48,-23,48,-35,-34,-36,-37,-38,48,48,48,]),'GE':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,46,46,-33,46,-39,46,46,46,46,46,-40,-46,46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,46,-35,-34,-36,-37,-38,46,46,46,]),'ABS':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'ICONST':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LPAREN':([1,2,3,5,8,9,10,12,14,16,17,19,21,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,59,60,85,89,102,106,115,118,120,129,],[19,24,25,27,19,31,32,33,19,35,36,19,39,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,89,19,19,19,111,19,19,19,111,111,]),'ELSE':([117,],[125,]),'EQ':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,44,44,-33,44,-39,44,44,44,44,44,-40,-46,44,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,44,-35,-34,-36,-37,-38,44,44,44,]),'ID':([0,1,8,14,19,22,24,25,26,29,32,33,35,36,38,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,72,85,89,93,106,115,118,128,130,138,],[7,20,20,20,20,20,20,20,7,61,20,20,20,20,69,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,7,20,20,7,20,20,20,132,7,7,]),'IF':([0,26,72,93,130,138,],[8,8,8,8,8,8,]),'AND':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,41,41,-33,41,-39,41,41,41,41,41,-40,-46,41,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,41,-35,-34,-36,-37,-38,41,41,41,]),'LBRACE':([42,60,62,88,122,125,135,],[72,90,93,102,129,130,138,]),'COMPONENT':([31,],[63,]),'SEND':([0,26,72,93,130,138,],[9,9,9,9,9,9,]),'NOT':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'COMMA':([11,13,15,18,20,34,40,55,56,57,63,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,95,96,97,98,99,101,103,104,108,110,121,123,124,127,132,133,141,],[-42,-43,-44,-41,-45,-33,-39,85,-18,85,94,-40,-46,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,-35,-34,-36,-37,-38,85,85,114,118,120,128,114,-7,120,135,120,-11,]),'OR':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,47,47,-33,47,-39,47,47,47,47,47,-40,-46,47,-25,-30,-31,-29,-28,-26,-22,-27,-20,-24,-21,-32,-23,47,-35,-34,-36,-37,-38,47,47,47,]),'MOD':([11,13,15,18,20,23,30,34,37,40,56,64,65,66,67,68,69,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,95,96,97,98,99,116,124,126,],[-42,-43,-44,-41,-45,51,51,-33,51,51,51,51,51,51,51,-40,-46,51,51,51,51,51,51,51,-22,51,51,-24,51,51,-23,51,-35,-34,-36,-37,-38,51,51,51,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'keyval':([90,114,],[104,123,]),'args':([24,25,85,89,],[55,57,101,103,]),'expression':([1,8,14,19,22,24,25,32,33,35,36,39,41,43,44,45,46,47,48,49,50,51,52,53,54,60,85,89,106,115,118,],[23,30,34,37,40,56,56,64,65,66,67,70,71,73,74,75,76,77,78,79,80,81,82,83,84,91,56,56,116,124,126,]),'actions':([102,120,129,],[110,127,133,]),'statement':([0,26,72,93,130,138,],[4,58,100,107,134,139,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> SKIP','statement',1,'p_statement_skip','parser.py',37),
  ('statement -> PRINT LPAREN args RPAREN','statement',4,'p_statement_print','parser.py',41),
  ('statement -> ID COLON EQUALS LBRACE keyval RBRACE','statement',6,'p_statement_assign','parser.py',45),
  ('statement -> ID DOT ID COLON EQUALS expression','statement',6,'p_statement_assign','parser.py',46),
  ('statement -> ID COLON EQUALS expression','statement',4,'p_statement_assign','parser.py',47),
  ('keyval -> keyval COMMA keyval','keyval',3,'p_keyval_assign','parser.py',56),
  ('keyval -> SCONST COLON expression','keyval',3,'p_keyval_assign','parser.py',57),
  ('statement -> RECEIVE LPAREN MOTION LPAREN args RPAREN RPAREN LBRACE actions RBRACE','statement',10,'p_statement_receive','parser.py',66),
  ('statement -> RECEIVE LPAREN MOTION RPAREN LBRACE actions RBRACE','statement',7,'p_statement_receive','parser.py',67),
  ('actions -> actions COMMA actions','actions',3,'p_actions_tuples','parser.py',74),
  ('actions -> LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPAREN','actions',9,'p_actions_tuples','parser.py',75),
  ('statement -> statement SEMI statement','statement',3,'p_statement_sequent','parser.py',82),
  ('statement -> IF expression THEN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','statement',10,'p_statement_ifelse','parser.py',86),
  ('statement -> WHILE expression DO LBRACE statement RBRACE','statement',6,'p_statement_while','parser.py',90),
  ('statement -> MOTION LPAREN args RPAREN','statement',4,'p_statement_motion','parser.py',94),
  ('statement -> MOTION','statement',1,'p_statement_motion','parser.py',95),
  ('args -> args COMMA args','args',3,'p_args_expressions','parser.py',102),
  ('args -> expression','args',1,'p_args_expressions','parser.py',103),
  ('statement -> SEND LPAREN COMPONENT COMMA MSGTYPE COMMA expression RPAREN','statement',8,'p_statement_send','parser.py',110),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',114),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',115),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',116),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',117),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',118),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',119),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',120),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',121),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',122),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',123),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',124),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',125),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',126),
  ('expression -> MINUS expression','expression',2,'p_expression_uop','parser.py',155),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_expression_uop','parser.py',156),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_expression_uop','parser.py',157),
  ('expression -> TAN LPAREN expression RPAREN','expression',4,'p_expression_uop','parser.py',158),
  ('expression -> ABS LPAREN expression RPAREN','expression',4,'p_expression_uop','parser.py',159),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_expression_uop','parser.py',160),
  ('expression -> NOT expression','expression',2,'p_expression_uop','parser.py',161),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',178),
  ('expression -> ICONST','expression',1,'p_expression_constant','parser.py',182),
  ('expression -> DCONST','expression',1,'p_expression_constant','parser.py',183),
  ('expression -> SCONST','expression',1,'p_expression_constant','parser.py',184),
  ('expression -> BCONST','expression',1,'p_expression_constant','parser.py',185),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',189),
  ('expression -> ID DOT ID','expression',3,'p_expression_id','parser.py',190),
]
