
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORLTLEGTGEEQNErightNOTleftPLUSMINUSleftTIMESDIVIDEMODrightUMINUSSINTANCOSABSSKIP SEND RECEIVE IF ELSE WHILE PRINT SIN TAN COS ABS SQRT ID MOTION COMPONENT_ID MSGTYPE ICONST DCONST SCONST BCONST PLUS MINUS TIMES DIVIDE MOD OR AND NOT LT LE GT GE EQ NE EQUALS LPAREN RPAREN LBRACE RBRACE COMMA SEMI COLON DOT statement : statement SEMI statement\n                      | receive\n                      | send\n                      | if\n                      | while\n                      | assign\n                      | motion\n                      | print\n                      | skip receive   : RECEIVE LPAREN motion RPAREN  LBRACE actions RBRACEsend : SEND LPAREN COMPONENT_ID COMMA MSGTYPE COMMA expression RPARENif : IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEwhile : WHILE LPAREN expression RPAREN LBRACE statement RBRACE assign : ID EQUALS LBRACE keyvalue RBRACE\n                   | ID DOT ID EQUALS expression\n                   | ID EQUALS expression  motion : MOTION LPAREN args RPAREN\n                   | MOTION print : PRINT LPAREN args RPARENskip : SKIP actions : actions COMMA actions\n                    | LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPAREN  keyvalue : keyvalue COMMA keyvalue\n                     | SCONST COLON expression args : args COMMA args\n                | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : MINUS expression %prec UMINUS\n                      | SIN LPAREN expression RPAREN\n                      | COS LPAREN expression RPAREN\n                      | TAN LPAREN expression RPAREN\n                      | ABS LPAREN expression RPAREN\n                      | SQRT LPAREN expression RPAREN\n                      | NOT expressionexpression : LPAREN expression RPARENexpression : ICONST\n                      | DCONST\n                      | SCONST\n                      | BCONSTexpression : ID\n                      | ID DOT ID'
    
_lr_action_items = {'COS':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'COMPONENT_ID':([26,],[50,]),'WHILE':([0,21,93,110,135,138,],[2,2,2,2,2,2,]),'DCONST':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'SQRT':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'PRINT':([0,21,93,110,135,138,],[3,3,3,3,3,3,]),'SIN':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'DOT':([11,37,],[24,57,]),'DIVIDE':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,62,62,62,62,-40,62,62,62,62,62,62,-47,-53,62,62,62,-30,62,62,62,-29,62,62,62,-31,62,62,62,-42,-41,-43,-44,-45,62,62,]),'LE':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,70,70,70,70,-40,70,-46,70,70,70,70,-47,-53,70,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,70,-42,-41,-43,-44,-45,70,70,]),'RPAREN':([6,28,30,32,35,37,40,41,42,43,45,49,53,56,59,76,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,104,112,113,114,115,116,129,141,],[-18,-49,-50,-51,-48,-52,63,75,-26,76,77,81,-40,87,-46,-17,112,113,114,115,-47,-53,116,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,-25,-42,-41,-43,-44,-45,133,142,]),'SEMI':([1,4,5,6,7,8,10,13,15,16,17,28,30,32,35,37,44,47,53,59,75,76,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,107,109,112,113,114,115,116,117,122,124,125,133,137,139,140,],[-9,-4,-3,-18,21,-8,-20,-2,-7,-5,-6,-49,-50,-51,-48,-52,21,-16,-40,-46,-19,-17,-47,-53,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,-14,-15,-42,-41,-43,-44,-45,21,21,-13,-10,-11,21,-12,21,]),'COLON':([78,],[106,]),'NE':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,73,73,73,73,-40,73,-46,73,73,73,73,-47,-53,73,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,73,-42,-41,-43,-44,-45,73,73,]),'SCONST':([18,19,20,23,25,31,36,39,46,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,108,123,],[30,30,30,30,30,30,30,30,78,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,78,30,]),'MINUS':([18,19,20,23,25,28,30,31,32,35,36,37,39,40,42,47,49,51,52,53,54,55,56,58,59,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,106,109,112,113,114,115,116,120,123,129,],[31,31,31,31,31,-49,-50,31,-51,-48,31,-52,31,72,72,72,72,31,31,-40,31,31,72,31,72,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,72,72,72,72,-47,-53,72,72,72,-30,72,72,72,-29,72,-27,72,-31,-28,72,31,72,-42,-41,-43,-44,-45,72,31,72,]),'MOTION':([0,21,22,93,110,135,138,],[6,6,6,6,6,6,6,]),'LT':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,65,65,65,65,-40,65,-46,65,65,65,65,-47,-53,65,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,65,-42,-41,-43,-44,-45,65,65,]),'PLUS':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,69,69,69,69,-40,69,69,69,69,69,69,-47,-53,69,69,69,-30,69,69,69,-29,69,-27,69,-31,-28,69,69,-42,-41,-43,-44,-45,69,69,]),'MSGTYPE':([82,119,],[111,127,]),'BCONST':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TAN':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'$end':([1,4,5,6,7,8,10,13,15,16,17,28,30,32,35,37,44,47,53,59,75,76,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,107,109,112,113,114,115,116,124,125,133,139,],[-9,-4,-3,-18,0,-8,-20,-2,-7,-5,-6,-49,-50,-51,-48,-52,-1,-16,-40,-46,-19,-17,-47,-53,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,-14,-15,-42,-41,-43,-44,-45,-13,-10,-11,-12,]),'GT':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,68,68,68,68,-40,68,-46,68,68,68,68,-47,-53,68,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,68,-42,-41,-43,-44,-45,68,68,]),'RBRACE':([1,4,5,6,8,10,13,15,16,17,28,30,32,35,37,44,47,53,59,75,76,79,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,107,109,112,113,114,115,116,117,118,120,121,122,124,125,130,133,137,139,140,142,],[-9,-4,-3,-18,-8,-20,-2,-7,-5,-6,-49,-50,-51,-48,-52,-1,-16,-40,-46,-19,-17,107,-47,-53,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,-14,-15,-42,-41,-43,-44,-45,124,125,-24,-23,128,-13,-10,-21,-11,139,-12,141,-22,]),'RECEIVE':([0,21,93,110,135,138,],[9,9,9,9,9,9,]),'SKIP':([0,21,93,110,135,138,],[10,10,10,10,10,10,]),'EQUALS':([11,48,],[23,80,]),'TIMES':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,67,67,67,67,-40,67,67,67,67,67,67,-47,-53,67,67,67,-30,67,67,67,-29,67,67,67,-31,67,67,67,-42,-41,-43,-44,-45,67,67,]),'GE':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,66,66,66,66,-40,66,-46,66,66,66,66,-47,-53,66,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,66,-42,-41,-43,-44,-45,66,66,]),'ABS':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ICONST':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'LPAREN':([2,3,6,9,12,14,18,19,20,23,25,27,29,31,33,34,36,38,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,105,106,123,126,],[18,19,20,22,25,26,36,36,36,36,36,51,52,36,54,55,36,58,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,119,36,36,119,]),'ELSE':([128,],[132,]),'EQ':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,64,64,64,64,-40,64,-46,64,64,64,64,-47,-53,64,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,64,-42,-41,-43,-44,-45,64,64,]),'ID':([0,18,19,20,21,23,24,25,31,36,39,51,52,54,55,57,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,93,106,110,123,131,135,138,],[11,37,37,37,11,37,48,37,37,37,37,37,37,37,37,88,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,11,37,11,37,134,11,11,]),'IF':([0,21,93,110,135,138,],[12,12,12,12,12,12,]),'AND':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,60,60,60,60,-40,60,-46,60,60,60,60,-47,-53,60,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,60,-42,-41,-43,-44,-45,60,60,]),'LBRACE':([23,63,77,81,132,136,],[46,93,105,110,135,138,]),'SEND':([0,21,93,110,135,138,],[14,14,14,14,14,14,]),'NOT':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'COMMA':([28,30,32,35,37,41,42,43,50,53,59,79,87,88,90,91,92,94,95,96,97,98,99,100,101,102,103,104,111,112,113,114,115,116,118,120,121,127,130,134,142,],[-49,-50,-51,-48,-52,74,-26,74,82,-40,-46,108,-47,-53,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,74,123,-42,-41,-43,-44,-45,126,-24,108,131,126,136,-22,]),'OR':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,61,61,61,61,-40,61,-46,61,61,61,61,-47,-53,61,-32,-33,-30,-38,-36,-35,-29,-34,-27,-37,-31,-28,-39,61,-42,-41,-43,-44,-45,61,61,]),'MOD':([28,30,32,35,37,40,42,47,49,53,56,59,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,103,109,112,113,114,115,116,120,129,],[-49,-50,-51,-48,-52,71,71,71,71,-40,71,71,71,71,71,71,-47,-53,71,71,71,-30,71,71,71,-29,71,71,71,-31,71,71,71,-42,-41,-43,-44,-45,71,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'receive':([0,21,93,110,135,138,],[13,13,13,13,13,13,]),'skip':([0,21,93,110,135,138,],[1,1,1,1,1,1,]),'args':([19,20,74,],[41,43,104,]),'send':([0,21,93,110,135,138,],[5,5,5,5,5,5,]),'motion':([0,21,22,93,110,135,138,],[15,15,45,15,15,15,15,]),'while':([0,21,93,110,135,138,],[16,16,16,16,16,16,]),'keyvalue':([46,108,],[79,121,]),'actions':([105,126,],[118,130,]),'statement':([0,21,93,110,135,138,],[7,44,117,122,137,140,]),'print':([0,21,93,110,135,138,],[8,8,8,8,8,8,]),'expression':([18,19,20,23,25,31,36,39,51,52,54,55,58,60,61,62,64,65,66,67,68,69,70,71,72,73,74,80,106,123,],[40,42,42,47,49,53,56,59,83,84,85,86,89,90,91,92,94,95,96,97,98,99,100,101,102,103,42,109,120,129,]),'assign':([0,21,93,110,135,138,],[17,17,17,17,17,17,]),'if':([0,21,93,110,135,138,],[4,4,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement SEMI statement','statement',3,'p_statement_program','parser.py',36),
  ('statement -> receive','statement',1,'p_statement_program','parser.py',37),
  ('statement -> send','statement',1,'p_statement_program','parser.py',38),
  ('statement -> if','statement',1,'p_statement_program','parser.py',39),
  ('statement -> while','statement',1,'p_statement_program','parser.py',40),
  ('statement -> assign','statement',1,'p_statement_program','parser.py',41),
  ('statement -> motion','statement',1,'p_statement_program','parser.py',42),
  ('statement -> print','statement',1,'p_statement_program','parser.py',43),
  ('statement -> skip','statement',1,'p_statement_program','parser.py',44),
  ('receive -> RECEIVE LPAREN motion RPAREN LBRACE actions RBRACE','receive',7,'p_receive_msg','parser.py',51),
  ('send -> SEND LPAREN COMPONENT_ID COMMA MSGTYPE COMMA expression RPAREN','send',8,'p_send_msg','parser.py',55),
  ('if -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if',11,'p_if_code','parser.py',59),
  ('while -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','while',7,'p_while_code','parser.py',63),
  ('assign -> ID EQUALS LBRACE keyvalue RBRACE','assign',5,'p_assign_code','parser.py',67),
  ('assign -> ID DOT ID EQUALS expression','assign',5,'p_assign_code','parser.py',68),
  ('assign -> ID EQUALS expression','assign',3,'p_assign_code','parser.py',69),
  ('motion -> MOTION LPAREN args RPAREN','motion',4,'p_motion_exec','parser.py',78),
  ('motion -> MOTION','motion',1,'p_motion_exec','parser.py',79),
  ('print -> PRINT LPAREN args RPAREN','print',4,'p_print_function','parser.py',86),
  ('skip -> SKIP','skip',1,'p_skip_function','parser.py',90),
  ('actions -> actions COMMA actions','actions',3,'p_actions_tuple','parser.py',96),
  ('actions -> LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPAREN','actions',9,'p_actions_tuple','parser.py',97),
  ('keyvalue -> keyvalue COMMA keyvalue','keyvalue',3,'p_keyvalue_dictionary','parser.py',104),
  ('keyvalue -> SCONST COLON expression','keyvalue',3,'p_keyvalue_dictionary','parser.py',105),
  ('args -> args COMMA args','args',3,'p_args_tuple','parser.py',114),
  ('args -> expression','args',1,'p_args_tuple','parser.py',115),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','parser.py',124),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','parser.py',125),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','parser.py',126),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','parser.py',127),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','parser.py',128),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','parser.py',129),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','parser.py',130),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',131),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',132),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',133),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',134),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',135),
  ('expression -> expression NE expression','expression',3,'p_expression_binop','parser.py',136),
  ('expression -> MINUS expression','expression',2,'p_expression_unop','parser.py',165),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_expression_unop','parser.py',166),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_expression_unop','parser.py',167),
  ('expression -> TAN LPAREN expression RPAREN','expression',4,'p_expression_unop','parser.py',168),
  ('expression -> ABS LPAREN expression RPAREN','expression',4,'p_expression_unop','parser.py',169),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_expression_unop','parser.py',170),
  ('expression -> NOT expression','expression',2,'p_expression_unop','parser.py',171),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',188),
  ('expression -> ICONST','expression',1,'p_expression_constant','parser.py',192),
  ('expression -> DCONST','expression',1,'p_expression_constant','parser.py',193),
  ('expression -> SCONST','expression',1,'p_expression_constant','parser.py',194),
  ('expression -> BCONST','expression',1,'p_expression_constant','parser.py',195),
  ('expression -> ID','expression',1,'p_expression_id','parser.py',199),
  ('expression -> ID DOT ID','expression',3,'p_expression_id','parser.py',200),
]
