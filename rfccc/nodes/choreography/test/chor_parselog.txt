    lex.py: 924:lex: tokens   = ('DEF', 'END', 'IN', 'SIN', 'TAN', 'COS', 'ABS', 'SQRT', 'ID', 'ICONST', 'DCONST', 'SCONST', 'BCONST', 'ARROW', 'PLUS', 'MINUS', 'TIMES', 'DIVIDE', 'MOD', 'OR', 'AND', 'NOT', 'LT', 'LE', 'GT', 'GE', 'EQ', 'NE', 'EQUALS', 'LPAREN', 'RPAREN', 'LSQUARE', 'RSQUARE', 'COMMA', 'SEMI', 'COLON', 'DOT')
    lex.py: 925:lex: literals = ''
    lex.py: 926:lex: states   = {'INITIAL': 'inclusive'}
    lex.py: 953:lex: Adding rule t_NEWLINE -> '\n+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_ID -> '[A-Za-z_][\w_]*' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_DCONST -> '\d+\.\d+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_ICONST -> '\d+' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_SCONST -> '\"([^\\\n]|(\\.))*?\"' (state 'INITIAL')
    lex.py: 953:lex: Adding rule t_comment -> '\#.*\n' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_OR -> '\|\|' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_AND -> '&&' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_ARROW -> '->' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DOT -> '\.' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_EQ -> '==' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_GE -> '>=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LE -> '<=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LPAREN -> '\(' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LSQUARE -> '\[' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_NE -> '!=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_PLUS -> '\+' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_RPAREN -> '\)' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_RSQUARE -> '\]' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_TIMES -> '\*' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_COLON -> ':' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_COMMA -> ',' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_DIVIDE -> '/' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_EQUALS -> '=' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_GT -> '>' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_LT -> '<' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_MINUS -> '-' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_MOD -> '%' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_NOT -> '!' (state 'INITIAL')
    lex.py: 959:lex: Adding rule t_SEMI -> ';' (state 'INITIAL')
    lex.py: 966:lex: ==== MASTER REGEXS FOLLOW ====
    lex.py: 975:lex: state 'INITIAL' : regex[0] = '(?P<t_NEWLINE>\n+)|(?P<t_ID>[A-Za-z_][\w_]*)|(?P<t_DCONST>\d+\.\d+)|(?P<t_ICONST>\d+)|(?P<t_SCONST>\"([^\\\n]|(\\.))*?\")|(?P<t_comment>\#.*\n)|(?P<t_OR>\|\|)|(?P<t_AND>&&)|(?P<t_ARROW>->)|(?P<t_DOT>\.)|(?P<t_EQ>==)|(?P<t_GE>>=)|(?P<t_LE><=)|(?P<t_LPAREN>\()|(?P<t_LSQUARE>\[)|(?P<t_NE>!=)|(?P<t_PLUS>\+)|(?P<t_RPAREN>\))|(?P<t_RSQUARE>\])|(?P<t_TIMES>\*)|(?P<t_COLON>:)|(?P<t_COMMA>,)|(?P<t_DIVIDE>/)|(?P<t_EQUALS>=)|(?P<t_GT>>)|(?P<t_LT><)|(?P<t_MINUS>-)|(?P<t_MOD>%)|(?P<t_NOT>!)|(?P<t_SEMI>;)'
   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> choreography
   yacc.py:3381:Rule 1     choreography -> ID EQUALS DEF statement IN LSQUARE expression RSQUARE ID
   yacc.py:3381:Rule 2     statement -> statement statement
   yacc.py:3381:Rule 3     statement -> message
   yacc.py:3381:Rule 4     statement -> motion
   yacc.py:3381:Rule 5     statement -> guard
   yacc.py:3381:Rule 6     statement -> merge
   yacc.py:3381:Rule 7     statement -> fork
   yacc.py:3381:Rule 8     statement -> join
   yacc.py:3381:Rule 9     statement -> end
   yacc.py:3381:Rule 10    message -> ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:3381:Rule 11    msgarg -> LPAREN exp RPAREN
   yacc.py:3381:Rule 12    msgarg -> LPAREN RPAREN
   yacc.py:3381:Rule 13    exp -> exp COMMA exp
   yacc.py:3381:Rule 14    exp -> expression
   yacc.py:3381:Rule 15    motion -> ID EQUALS LPAREN mspecs RPAREN SEMI ID
   yacc.py:3381:Rule 16    mspecs -> mspecs COMMA mspecs
   yacc.py:3381:Rule 17    mspecs -> ID COLON function
   yacc.py:3381:Rule 18    function -> ID LPAREN funcargs RPAREN
   yacc.py:3381:Rule 19    funcargs -> funcargs COMMA funcargs
   yacc.py:3381:Rule 20    funcargs -> expression
   yacc.py:3381:Rule 21    guard -> ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:3381:Rule 22    gargs -> LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:3381:Rule 23    gargs -> LSQUARE expression RSQUARE ID
   yacc.py:3381:Rule 24    merge -> ID PLUS margs EQUALS ID
   yacc.py:3381:Rule 25    margs -> ID PLUS margs
   yacc.py:3381:Rule 26    margs -> ID
   yacc.py:3381:Rule 27    fork -> ID EQUALS ID OR fargs
   yacc.py:3381:Rule 28    fargs -> ID OR fargs
   yacc.py:3381:Rule 29    fargs -> ID
   yacc.py:3381:Rule 30    join -> ID OR jargs EQUALS ID
   yacc.py:3381:Rule 31    jargs -> ID OR jargs
   yacc.py:3381:Rule 32    jargs -> ID
   yacc.py:3381:Rule 33    end -> ID EQUALS END
   yacc.py:3381:Rule 34    expression -> expression PLUS expression
   yacc.py:3381:Rule 35    expression -> expression MINUS expression
   yacc.py:3381:Rule 36    expression -> expression TIMES expression
   yacc.py:3381:Rule 37    expression -> expression DIVIDE expression
   yacc.py:3381:Rule 38    expression -> expression MOD expression
   yacc.py:3381:Rule 39    expression -> expression AND expression
   yacc.py:3381:Rule 40    expression -> expression OR expression
   yacc.py:3381:Rule 41    expression -> expression GT expression
   yacc.py:3381:Rule 42    expression -> expression GE expression
   yacc.py:3381:Rule 43    expression -> expression LT expression
   yacc.py:3381:Rule 44    expression -> expression LE expression
   yacc.py:3381:Rule 45    expression -> expression EQ expression
   yacc.py:3381:Rule 46    expression -> expression NE expression
   yacc.py:3381:Rule 47    expression -> SIN LPAREN expression RPAREN
   yacc.py:3381:Rule 48    expression -> COS LPAREN expression RPAREN
   yacc.py:3381:Rule 49    expression -> TAN LPAREN expression RPAREN
   yacc.py:3381:Rule 50    expression -> ABS LPAREN expression RPAREN
   yacc.py:3381:Rule 51    expression -> SQRT LPAREN expression RPAREN
   yacc.py:3381:Rule 52    expression -> ID LPAREN expression RPAREN
   yacc.py:3381:Rule 53    expression -> LPAREN expression RPAREN
   yacc.py:3381:Rule 54    expression -> ICONST
   yacc.py:3381:Rule 55    expression -> DCONST
   yacc.py:3381:Rule 56    expression -> SCONST
   yacc.py:3381:Rule 57    expression -> BCONST
   yacc.py:3381:Rule 58    expression -> ID
   yacc.py:3381:Rule 59    expression -> ID DOT ID
   yacc.py:3381:Rule 60    expression -> NOT expression
   yacc.py:3381:Rule 61    expression -> MINUS expression
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:ABS                  : 50
   yacc.py:3405:AND                  : 39
   yacc.py:3405:ARROW                : 10
   yacc.py:3405:BCONST               : 57
   yacc.py:3405:COLON                : 10 17
   yacc.py:3405:COMMA                : 13 16 19
   yacc.py:3405:COS                  : 48
   yacc.py:3405:DCONST               : 55
   yacc.py:3405:DEF                  : 1
   yacc.py:3405:DIVIDE               : 37
   yacc.py:3405:DOT                  : 59
   yacc.py:3405:END                  : 33
   yacc.py:3405:EQ                   : 45
   yacc.py:3405:EQUALS               : 1 10 15 21 24 27 30 33
   yacc.py:3405:GE                   : 42
   yacc.py:3405:GT                   : 41
   yacc.py:3405:ICONST               : 54
   yacc.py:3405:ID                   : 1 1 10 10 10 10 10 15 15 17 18 21 21 22 23 24 24 25 26 27 27 28 29 30 30 31 32 33 52 58 59 59
   yacc.py:3405:IN                   : 1
   yacc.py:3405:LE                   : 44
   yacc.py:3405:LPAREN               : 11 12 15 18 47 48 49 50 51 52 53
   yacc.py:3405:LSQUARE              : 1 21 22 23
   yacc.py:3405:LT                   : 43
   yacc.py:3405:MINUS                : 35 61
   yacc.py:3405:MOD                  : 38
   yacc.py:3405:NE                   : 46
   yacc.py:3405:NOT                  : 60
   yacc.py:3405:OR                   : 27 28 30 31 40
   yacc.py:3405:PLUS                 : 21 22 24 25 34
   yacc.py:3405:RPAREN               : 11 12 15 18 47 48 49 50 51 52 53
   yacc.py:3405:RSQUARE              : 1 21 22 23
   yacc.py:3405:SCONST               : 56
   yacc.py:3405:SEMI                 : 10 15
   yacc.py:3405:SIN                  : 47
   yacc.py:3405:SQRT                 : 51
   yacc.py:3405:TAN                  : 49
   yacc.py:3405:TIMES                : 36
   yacc.py:3405:error                : 
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:choreography         : 0
   yacc.py:3413:end                  : 9
   yacc.py:3413:exp                  : 11 13 13
   yacc.py:3413:expression           : 1 14 20 21 22 23 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 48 49 50 51 52 53 60 61
   yacc.py:3413:fargs                : 27 28
   yacc.py:3413:fork                 : 7
   yacc.py:3413:funcargs             : 18 19 19
   yacc.py:3413:function             : 17
   yacc.py:3413:gargs                : 21 22
   yacc.py:3413:guard                : 5
   yacc.py:3413:jargs                : 30 31
   yacc.py:3413:join                 : 8
   yacc.py:3413:margs                : 24 25
   yacc.py:3413:merge                : 6
   yacc.py:3413:message              : 3
   yacc.py:3413:motion               : 4
   yacc.py:3413:msgarg               : 10
   yacc.py:3413:mspecs               : 15 16 16
   yacc.py:3413:statement            : 1 2 2
   yacc.py:3414:
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . choreography
   yacc.py:2565:    (1) choreography -> . ID EQUALS DEF statement IN LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 2
   yacc.py:2689:
   yacc.py:2714:    choreography                   shift and go to state 1
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> choreography .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID . EQUALS DEF statement IN LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 3
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS . DEF statement IN LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    DEF             shift and go to state 4
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF . statement IN LSQUARE expression RSQUARE ID
   yacc.py:2565:    (2) statement -> . statement statement
   yacc.py:2565:    (3) statement -> . message
   yacc.py:2565:    (4) statement -> . motion
   yacc.py:2565:    (5) statement -> . guard
   yacc.py:2565:    (6) statement -> . merge
   yacc.py:2565:    (7) statement -> . fork
   yacc.py:2565:    (8) statement -> . join
   yacc.py:2565:    (9) statement -> . end
   yacc.py:2565:    (10) message -> . ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (15) motion -> . ID EQUALS LPAREN mspecs RPAREN SEMI ID
   yacc.py:2565:    (21) guard -> . ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (24) merge -> . ID PLUS margs EQUALS ID
   yacc.py:2565:    (27) fork -> . ID EQUALS ID OR fargs
   yacc.py:2565:    (30) join -> . ID OR jargs EQUALS ID
   yacc.py:2565:    (33) end -> . ID EQUALS END
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    statement                      shift and go to state 6
   yacc.py:2714:    message                        shift and go to state 7
   yacc.py:2714:    motion                         shift and go to state 8
   yacc.py:2714:    guard                          shift and go to state 9
   yacc.py:2714:    merge                          shift and go to state 10
   yacc.py:2714:    fork                           shift and go to state 11
   yacc.py:2714:    join                           shift and go to state 12
   yacc.py:2714:    end                            shift and go to state 13
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID . EQUALS ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (15) motion -> ID . EQUALS LPAREN mspecs RPAREN SEMI ID
   yacc.py:2565:    (21) guard -> ID . EQUALS LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (24) merge -> ID . PLUS margs EQUALS ID
   yacc.py:2565:    (27) fork -> ID . EQUALS ID OR fargs
   yacc.py:2565:    (30) join -> ID . OR jargs EQUALS ID
   yacc.py:2565:    (33) end -> ID . EQUALS END
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 14
   yacc.py:2687:    PLUS            shift and go to state 15
   yacc.py:2687:    OR              shift and go to state 16
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement . IN LSQUARE expression RSQUARE ID
   yacc.py:2565:    (2) statement -> statement . statement
   yacc.py:2565:    (2) statement -> . statement statement
   yacc.py:2565:    (3) statement -> . message
   yacc.py:2565:    (4) statement -> . motion
   yacc.py:2565:    (5) statement -> . guard
   yacc.py:2565:    (6) statement -> . merge
   yacc.py:2565:    (7) statement -> . fork
   yacc.py:2565:    (8) statement -> . join
   yacc.py:2565:    (9) statement -> . end
   yacc.py:2565:    (10) message -> . ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (15) motion -> . ID EQUALS LPAREN mspecs RPAREN SEMI ID
   yacc.py:2565:    (21) guard -> . ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (24) merge -> . ID PLUS margs EQUALS ID
   yacc.py:2565:    (27) fork -> . ID EQUALS ID OR fargs
   yacc.py:2565:    (30) join -> . ID OR jargs EQUALS ID
   yacc.py:2565:    (33) end -> . ID EQUALS END
   yacc.py:2566:
   yacc.py:2687:    IN              shift and go to state 18
   yacc.py:2687:    ID              shift and go to state 5
   yacc.py:2689:
   yacc.py:2714:    statement                      shift and go to state 17
   yacc.py:2714:    message                        shift and go to state 7
   yacc.py:2714:    motion                         shift and go to state 8
   yacc.py:2714:    guard                          shift and go to state 9
   yacc.py:2714:    merge                          shift and go to state 10
   yacc.py:2714:    fork                           shift and go to state 11
   yacc.py:2714:    join                           shift and go to state 12
   yacc.py:2714:    end                            shift and go to state 13
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (3) statement -> message .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 3 (statement -> message .)
   yacc.py:2687:    ID              reduce using rule 3 (statement -> message .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (4) statement -> motion .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 4 (statement -> motion .)
   yacc.py:2687:    ID              reduce using rule 4 (statement -> motion .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (5) statement -> guard .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 5 (statement -> guard .)
   yacc.py:2687:    ID              reduce using rule 5 (statement -> guard .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (6) statement -> merge .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 6 (statement -> merge .)
   yacc.py:2687:    ID              reduce using rule 6 (statement -> merge .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (7) statement -> fork .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 7 (statement -> fork .)
   yacc.py:2687:    ID              reduce using rule 7 (statement -> fork .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (8) statement -> join .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 8 (statement -> join .)
   yacc.py:2687:    ID              reduce using rule 8 (statement -> join .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (9) statement -> end .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 9 (statement -> end .)
   yacc.py:2687:    ID              reduce using rule 9 (statement -> end .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS . ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (15) motion -> ID EQUALS . LPAREN mspecs RPAREN SEMI ID
   yacc.py:2565:    (21) guard -> ID EQUALS . LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (27) fork -> ID EQUALS . ID OR fargs
   yacc.py:2565:    (33) end -> ID EQUALS . END
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 19
   yacc.py:2687:    LPAREN          shift and go to state 20
   yacc.py:2687:    LSQUARE         shift and go to state 21
   yacc.py:2687:    END             shift and go to state 22
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (24) merge -> ID PLUS . margs EQUALS ID
   yacc.py:2565:    (25) margs -> . ID PLUS margs
   yacc.py:2565:    (26) margs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 23
   yacc.py:2689:
   yacc.py:2714:    margs                          shift and go to state 24
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (30) join -> ID OR . jargs EQUALS ID
   yacc.py:2565:    (31) jargs -> . ID OR jargs
   yacc.py:2565:    (32) jargs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 25
   yacc.py:2689:
   yacc.py:2714:    jargs                          shift and go to state 26
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (2) statement -> statement statement .
   yacc.py:2565:    (2) statement -> statement . statement
   yacc.py:2565:    (2) statement -> . statement statement
   yacc.py:2565:    (3) statement -> . message
   yacc.py:2565:    (4) statement -> . motion
   yacc.py:2565:    (5) statement -> . guard
   yacc.py:2565:    (6) statement -> . merge
   yacc.py:2565:    (7) statement -> . fork
   yacc.py:2565:    (8) statement -> . join
   yacc.py:2565:    (9) statement -> . end
   yacc.py:2565:    (10) message -> . ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (15) motion -> . ID EQUALS LPAREN mspecs RPAREN SEMI ID
   yacc.py:2565:    (21) guard -> . ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (24) merge -> . ID PLUS margs EQUALS ID
   yacc.py:2565:    (27) fork -> . ID EQUALS ID OR fargs
   yacc.py:2565:    (30) join -> . ID OR jargs EQUALS ID
   yacc.py:2565:    (33) end -> . ID EQUALS END
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for ID resolved as shift
   yacc.py:2687:    IN              reduce using rule 2 (statement -> statement statement .)
   yacc.py:2687:    ID              shift and go to state 5
   yacc.py:2689:
   yacc.py:2696:  ! ID              [ reduce using rule 2 (statement -> statement statement .) ]
   yacc.py:2700:
   yacc.py:2714:    statement                      shift and go to state 17
   yacc.py:2714:    message                        shift and go to state 7
   yacc.py:2714:    motion                         shift and go to state 8
   yacc.py:2714:    guard                          shift and go to state 9
   yacc.py:2714:    merge                          shift and go to state 10
   yacc.py:2714:    fork                           shift and go to state 11
   yacc.py:2714:    join                           shift and go to state 12
   yacc.py:2714:    end                            shift and go to state 13
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement IN . LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    LSQUARE         shift and go to state 27
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID . ARROW ID COLON ID msgarg SEMI ID
   yacc.py:2565:    (27) fork -> ID EQUALS ID . OR fargs
   yacc.py:2566:
   yacc.py:2687:    ARROW           shift and go to state 28
   yacc.py:2687:    OR              shift and go to state 29
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (15) motion -> ID EQUALS LPAREN . mspecs RPAREN SEMI ID
   yacc.py:2565:    (16) mspecs -> . mspecs COMMA mspecs
   yacc.py:2565:    (17) mspecs -> . ID COLON function
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 30
   yacc.py:2689:
   yacc.py:2714:    mspecs                         shift and go to state 31
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE . expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 33
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (33) end -> ID EQUALS END .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 33 (end -> ID EQUALS END .)
   yacc.py:2687:    ID              reduce using rule 33 (end -> ID EQUALS END .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (25) margs -> ID . PLUS margs
   yacc.py:2565:    (26) margs -> ID .
   yacc.py:2566:
   yacc.py:2687:    PLUS            shift and go to state 46
   yacc.py:2687:    EQUALS          reduce using rule 26 (margs -> ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (24) merge -> ID PLUS margs . EQUALS ID
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 47
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (31) jargs -> ID . OR jargs
   yacc.py:2565:    (32) jargs -> ID .
   yacc.py:2566:
   yacc.py:2687:    OR              shift and go to state 48
   yacc.py:2687:    EQUALS          reduce using rule 32 (jargs -> ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (30) join -> ID OR jargs . EQUALS ID
   yacc.py:2566:
   yacc.py:2687:    EQUALS          shift and go to state 49
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement IN LSQUARE . expression RSQUARE ID
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 50
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW . ID COLON ID msgarg SEMI ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 51
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (27) fork -> ID EQUALS ID OR . fargs
   yacc.py:2565:    (28) fargs -> . ID OR fargs
   yacc.py:2565:    (29) fargs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    fargs                          shift and go to state 53
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (17) mspecs -> ID . COLON function
   yacc.py:2566:
   yacc.py:2687:    COLON           shift and go to state 54
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (15) motion -> ID EQUALS LPAREN mspecs . RPAREN SEMI ID
   yacc.py:2565:    (16) mspecs -> mspecs . COMMA mspecs
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 55
   yacc.py:2687:    COMMA           shift and go to state 56
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (52) expression -> ID . LPAREN expression RPAREN
   yacc.py:2565:    (58) expression -> ID .
   yacc.py:2565:    (59) expression -> ID . DOT ID
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 57
   yacc.py:2687:    RSQUARE         reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    PLUS            reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    MINUS           reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    TIMES           reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    DIVIDE          reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    MOD             reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    AND             reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    OR              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    GT              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    GE              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    LT              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    LE              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    EQ              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    NE              reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    RPAREN          reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    COMMA           reduce using rule 58 (expression -> ID .)
   yacc.py:2687:    DOT             shift and go to state 58
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE expression . RSQUARE ID PLUS gargs
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         shift and go to state 59
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (61) expression -> MINUS . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 73
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (47) expression -> SIN . LPAREN expression RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 74
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (53) expression -> LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 75
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (48) expression -> COS . LPAREN expression RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 76
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (49) expression -> TAN . LPAREN expression RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 77
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (50) expression -> ABS . LPAREN expression RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 78
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (51) expression -> SQRT . LPAREN expression RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 79
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (54) expression -> ICONST .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    PLUS            reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    MINUS           reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    TIMES           reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    DIVIDE          reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    MOD             reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    AND             reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    OR              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    GT              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    GE              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    LT              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    LE              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    EQ              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    NE              reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    RPAREN          reduce using rule 54 (expression -> ICONST .)
   yacc.py:2687:    COMMA           reduce using rule 54 (expression -> ICONST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (55) expression -> DCONST .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    PLUS            reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    MINUS           reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    TIMES           reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    DIVIDE          reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    MOD             reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    AND             reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    OR              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    GT              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    GE              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    LT              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    LE              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    EQ              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    NE              reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    RPAREN          reduce using rule 55 (expression -> DCONST .)
   yacc.py:2687:    COMMA           reduce using rule 55 (expression -> DCONST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (56) expression -> SCONST .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    PLUS            reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    MINUS           reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    TIMES           reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    DIVIDE          reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    MOD             reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    AND             reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    OR              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    GT              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    GE              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    LT              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    LE              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    EQ              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    NE              reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    RPAREN          reduce using rule 56 (expression -> SCONST .)
   yacc.py:2687:    COMMA           reduce using rule 56 (expression -> SCONST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (57) expression -> BCONST .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    PLUS            reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    MINUS           reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    TIMES           reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    DIVIDE          reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    MOD             reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    AND             reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    OR              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    GT              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    GE              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    LT              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    LE              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    EQ              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    NE              reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    RPAREN          reduce using rule 57 (expression -> BCONST .)
   yacc.py:2687:    COMMA           reduce using rule 57 (expression -> BCONST .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (60) expression -> NOT . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 80
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (25) margs -> ID PLUS . margs
   yacc.py:2565:    (25) margs -> . ID PLUS margs
   yacc.py:2565:    (26) margs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 23
   yacc.py:2689:
   yacc.py:2714:    margs                          shift and go to state 81
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (24) merge -> ID PLUS margs EQUALS . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 82
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (31) jargs -> ID OR . jargs
   yacc.py:2565:    (31) jargs -> . ID OR jargs
   yacc.py:2565:    (32) jargs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 25
   yacc.py:2689:
   yacc.py:2714:    jargs                          shift and go to state 83
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (30) join -> ID OR jargs EQUALS . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 84
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement IN LSQUARE expression . RSQUARE ID
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         shift and go to state 85
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID . COLON ID msgarg SEMI ID
   yacc.py:2566:
   yacc.py:2687:    COLON           shift and go to state 86
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (28) fargs -> ID . OR fargs
   yacc.py:2565:    (29) fargs -> ID .
   yacc.py:2566:
   yacc.py:2687:    OR              shift and go to state 87
   yacc.py:2687:    IN              reduce using rule 29 (fargs -> ID .)
   yacc.py:2687:    ID              reduce using rule 29 (fargs -> ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (27) fork -> ID EQUALS ID OR fargs .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 27 (fork -> ID EQUALS ID OR fargs .)
   yacc.py:2687:    ID              reduce using rule 27 (fork -> ID EQUALS ID OR fargs .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (17) mspecs -> ID COLON . function
   yacc.py:2565:    (18) function -> . ID LPAREN funcargs RPAREN
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 88
   yacc.py:2689:
   yacc.py:2714:    function                       shift and go to state 89
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (15) motion -> ID EQUALS LPAREN mspecs RPAREN . SEMI ID
   yacc.py:2566:
   yacc.py:2687:    SEMI            shift and go to state 90
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (16) mspecs -> mspecs COMMA . mspecs
   yacc.py:2565:    (16) mspecs -> . mspecs COMMA mspecs
   yacc.py:2565:    (17) mspecs -> . ID COLON function
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 30
   yacc.py:2689:
   yacc.py:2714:    mspecs                         shift and go to state 91
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (52) expression -> ID LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 92
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (59) expression -> ID DOT . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 93
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE expression RSQUARE . ID PLUS gargs
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 94
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (34) expression -> expression PLUS . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 95
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (35) expression -> expression MINUS . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 96
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (36) expression -> expression TIMES . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 97
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (37) expression -> expression DIVIDE . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 98
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (38) expression -> expression MOD . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 99
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (39) expression -> expression AND . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 100
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (40) expression -> expression OR . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 101
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (41) expression -> expression GT . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 102
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (42) expression -> expression GE . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 103
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (43) expression -> expression LT . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 104
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (44) expression -> expression LE . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 105
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (45) expression -> expression EQ . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 106
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (46) expression -> expression NE . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 107
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (61) expression -> MINUS expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    PLUS            reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    MINUS           reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    TIMES           reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    MOD             reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    AND             reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    OR              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    GT              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    GE              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    LT              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    LE              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    EQ              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    NE              reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    RPAREN          reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2687:    COMMA           reduce using rule 61 (expression -> MINUS expression .)
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! TIMES           [ shift and go to state 62 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 63 ]
   yacc.py:2696:  ! MOD             [ shift and go to state 64 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (47) expression -> SIN LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 108
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (53) expression -> LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 109
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (48) expression -> COS LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 110
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (49) expression -> TAN LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 111
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (50) expression -> ABS LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 112
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (51) expression -> SQRT LPAREN . expression RPAREN
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 113
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (60) expression -> NOT expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    AND             reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    OR              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    GT              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    GE              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    LT              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    LE              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    EQ              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    NE              reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    RPAREN          reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    COMMA           reduce using rule 60 (expression -> NOT expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 60 (expression -> NOT expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 60 (expression -> NOT expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 60 (expression -> NOT expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 60 (expression -> NOT expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 60 (expression -> NOT expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (25) margs -> ID PLUS margs .
   yacc.py:2566:
   yacc.py:2687:    EQUALS          reduce using rule 25 (margs -> ID PLUS margs .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (24) merge -> ID PLUS margs EQUALS ID .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 24 (merge -> ID PLUS margs EQUALS ID .)
   yacc.py:2687:    ID              reduce using rule 24 (merge -> ID PLUS margs EQUALS ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (31) jargs -> ID OR jargs .
   yacc.py:2566:
   yacc.py:2687:    EQUALS          reduce using rule 31 (jargs -> ID OR jargs .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (30) join -> ID OR jargs EQUALS ID .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 30 (join -> ID OR jargs EQUALS ID .)
   yacc.py:2687:    ID              reduce using rule 30 (join -> ID OR jargs EQUALS ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement IN LSQUARE expression RSQUARE . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 114
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID COLON . ID msgarg SEMI ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 115
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (28) fargs -> ID OR . fargs
   yacc.py:2565:    (28) fargs -> . ID OR fargs
   yacc.py:2565:    (29) fargs -> . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 52
   yacc.py:2689:
   yacc.py:2714:    fargs                          shift and go to state 116
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (18) function -> ID . LPAREN funcargs RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 117
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (17) mspecs -> ID COLON function .
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 17 (mspecs -> ID COLON function .)
   yacc.py:2687:    COMMA           reduce using rule 17 (mspecs -> ID COLON function .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (15) motion -> ID EQUALS LPAREN mspecs RPAREN SEMI . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 118
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (16) mspecs -> mspecs COMMA mspecs .
   yacc.py:2565:    (16) mspecs -> mspecs . COMMA mspecs
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for COMMA resolved as shift
   yacc.py:2687:    RPAREN          reduce using rule 16 (mspecs -> mspecs COMMA mspecs .)
   yacc.py:2687:    COMMA           shift and go to state 56
   yacc.py:2689:
   yacc.py:2696:  ! COMMA           [ reduce using rule 16 (mspecs -> mspecs COMMA mspecs .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (52) expression -> ID LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 119
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (59) expression -> ID DOT ID .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    PLUS            reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    MINUS           reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    TIMES           reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    DIVIDE          reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    MOD             reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    AND             reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    OR              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    GT              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    GE              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    LT              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    LE              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    EQ              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    NE              reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    RPAREN          reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2687:    COMMA           reduce using rule 59 (expression -> ID DOT ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE expression RSQUARE ID . PLUS gargs
   yacc.py:2566:
   yacc.py:2687:    PLUS            shift and go to state 120
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (34) expression -> expression PLUS expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    PLUS            reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    MINUS           reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    AND             reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    OR              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    GT              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    GE              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    LT              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    LE              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    EQ              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    NE              reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    RPAREN          reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    COMMA           reduce using rule 34 (expression -> expression PLUS expression .)
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! TIMES           [ reduce using rule 34 (expression -> expression PLUS expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 34 (expression -> expression PLUS expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 34 (expression -> expression PLUS expression .) ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (35) expression -> expression MINUS expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    PLUS            reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    MINUS           reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    AND             reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    OR              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    GT              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    GE              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    LT              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    LE              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    EQ              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    NE              reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    RPAREN          reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    COMMA           reduce using rule 35 (expression -> expression MINUS expression .)
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! TIMES           [ reduce using rule 35 (expression -> expression MINUS expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 35 (expression -> expression MINUS expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 35 (expression -> expression MINUS expression .) ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (36) expression -> expression TIMES expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    PLUS            reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    MINUS           reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    TIMES           reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    MOD             reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    AND             reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    OR              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    GT              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    GE              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    LT              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    LE              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    EQ              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    NE              reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    RPAREN          reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2687:    COMMA           reduce using rule 36 (expression -> expression TIMES expression .)
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! TIMES           [ shift and go to state 62 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 63 ]
   yacc.py:2696:  ! MOD             [ shift and go to state 64 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (37) expression -> expression DIVIDE expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    PLUS            reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    MINUS           reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    TIMES           reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    MOD             reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    AND             reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    OR              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    GT              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    GE              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    LT              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    LE              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    EQ              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    NE              reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    RPAREN          reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2687:    COMMA           reduce using rule 37 (expression -> expression DIVIDE expression .)
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! TIMES           [ shift and go to state 62 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 63 ]
   yacc.py:2696:  ! MOD             [ shift and go to state 64 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (38) expression -> expression MOD expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    PLUS            reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    MINUS           reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    TIMES           reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    MOD             reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    AND             reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    OR              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    GT              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    GE              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    LT              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    LE              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    EQ              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    NE              reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    RPAREN          reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2687:    COMMA           reduce using rule 38 (expression -> expression MOD expression .)
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ shift and go to state 60 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 61 ]
   yacc.py:2696:  ! TIMES           [ shift and go to state 62 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 63 ]
   yacc.py:2696:  ! MOD             [ shift and go to state 64 ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (39) expression -> expression AND expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    AND             reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    OR              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    GT              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    GE              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    LT              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    LE              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    EQ              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    NE              reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    RPAREN          reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    COMMA           reduce using rule 39 (expression -> expression AND expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 39 (expression -> expression AND expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 39 (expression -> expression AND expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 39 (expression -> expression AND expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 39 (expression -> expression AND expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 39 (expression -> expression AND expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (40) expression -> expression OR expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    AND             reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    OR              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    GT              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    GE              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    LT              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    LE              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    EQ              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    NE              reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    RPAREN          reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    COMMA           reduce using rule 40 (expression -> expression OR expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 40 (expression -> expression OR expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 40 (expression -> expression OR expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 40 (expression -> expression OR expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 40 (expression -> expression OR expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 40 (expression -> expression OR expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (41) expression -> expression GT expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    AND             reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    OR              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    GT              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    GE              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    LT              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    LE              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    EQ              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    NE              reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    RPAREN          reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    COMMA           reduce using rule 41 (expression -> expression GT expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 41 (expression -> expression GT expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 41 (expression -> expression GT expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 41 (expression -> expression GT expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 41 (expression -> expression GT expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 41 (expression -> expression GT expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (42) expression -> expression GE expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    AND             reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    OR              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    GT              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    GE              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    LT              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    LE              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    EQ              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    NE              reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    RPAREN          reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    COMMA           reduce using rule 42 (expression -> expression GE expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 42 (expression -> expression GE expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 42 (expression -> expression GE expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 42 (expression -> expression GE expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 42 (expression -> expression GE expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 42 (expression -> expression GE expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (43) expression -> expression LT expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    AND             reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    OR              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    GT              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    GE              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    LT              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    LE              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    EQ              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    NE              reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    RPAREN          reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    COMMA           reduce using rule 43 (expression -> expression LT expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 43 (expression -> expression LT expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 43 (expression -> expression LT expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 43 (expression -> expression LT expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 43 (expression -> expression LT expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 43 (expression -> expression LT expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (44) expression -> expression LE expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    AND             reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    OR              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    GT              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    GE              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    LT              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    LE              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    EQ              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    NE              reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    RPAREN          reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    COMMA           reduce using rule 44 (expression -> expression LE expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 44 (expression -> expression LE expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 44 (expression -> expression LE expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 44 (expression -> expression LE expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 44 (expression -> expression LE expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 44 (expression -> expression LE expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (45) expression -> expression EQ expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    AND             reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    OR              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    GT              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    GE              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    LT              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    LE              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    EQ              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    NE              reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    RPAREN          reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    COMMA           reduce using rule 45 (expression -> expression EQ expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 45 (expression -> expression EQ expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 45 (expression -> expression EQ expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 45 (expression -> expression EQ expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 45 (expression -> expression EQ expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 45 (expression -> expression EQ expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (46) expression -> expression NE expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    AND             reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    OR              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    GT              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    GE              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    LT              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    LE              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    EQ              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    NE              reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    RPAREN          reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    COMMA           reduce using rule 46 (expression -> expression NE expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 46 (expression -> expression NE expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 46 (expression -> expression NE expression .) ]
   yacc.py:2696:  ! TIMES           [ reduce using rule 46 (expression -> expression NE expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 46 (expression -> expression NE expression .) ]
   yacc.py:2696:  ! MOD             [ reduce using rule 46 (expression -> expression NE expression .) ]
   yacc.py:2696:  ! AND             [ shift and go to state 65 ]
   yacc.py:2696:  ! OR              [ shift and go to state 66 ]
   yacc.py:2696:  ! GT              [ shift and go to state 67 ]
   yacc.py:2696:  ! GE              [ shift and go to state 68 ]
   yacc.py:2696:  ! LT              [ shift and go to state 69 ]
   yacc.py:2696:  ! LE              [ shift and go to state 70 ]
   yacc.py:2696:  ! EQ              [ shift and go to state 71 ]
   yacc.py:2696:  ! NE              [ shift and go to state 72 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (47) expression -> SIN LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 121
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (53) expression -> LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 53 (expression -> LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (48) expression -> COS LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 122
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (49) expression -> TAN LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 123
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (50) expression -> ABS LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 124
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (51) expression -> SQRT LPAREN expression . RPAREN
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 125
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (1) choreography -> ID EQUALS DEF statement IN LSQUARE expression RSQUARE ID .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (choreography -> ID EQUALS DEF statement IN LSQUARE expression RSQUARE ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID COLON ID . msgarg SEMI ID
   yacc.py:2565:    (11) msgarg -> . LPAREN exp RPAREN
   yacc.py:2565:    (12) msgarg -> . LPAREN RPAREN
   yacc.py:2566:
   yacc.py:2687:    LPAREN          shift and go to state 127
   yacc.py:2689:
   yacc.py:2714:    msgarg                         shift and go to state 126
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (28) fargs -> ID OR fargs .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 28 (fargs -> ID OR fargs .)
   yacc.py:2687:    ID              reduce using rule 28 (fargs -> ID OR fargs .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (18) function -> ID LPAREN . funcargs RPAREN
   yacc.py:2565:    (19) funcargs -> . funcargs COMMA funcargs
   yacc.py:2565:    (20) funcargs -> . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    funcargs                       shift and go to state 128
   yacc.py:2714:    expression                     shift and go to state 129
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (15) motion -> ID EQUALS LPAREN mspecs RPAREN SEMI ID .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 15 (motion -> ID EQUALS LPAREN mspecs RPAREN SEMI ID .)
   yacc.py:2687:    ID              reduce using rule 15 (motion -> ID EQUALS LPAREN mspecs RPAREN SEMI ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (52) expression -> ID LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 52 (expression -> ID LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE expression RSQUARE ID PLUS . gargs
   yacc.py:2565:    (22) gargs -> . LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (23) gargs -> . LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    LSQUARE         shift and go to state 130
   yacc.py:2689:
   yacc.py:2714:    gargs                          shift and go to state 131
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (47) expression -> SIN LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 47 (expression -> SIN LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (48) expression -> COS LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 48 (expression -> COS LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (49) expression -> TAN LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 49 (expression -> TAN LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (50) expression -> ABS LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 50 (expression -> ABS LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (51) expression -> SQRT LPAREN expression RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    PLUS            reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    MINUS           reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    TIMES           reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    DIVIDE          reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    MOD             reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    AND             reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    OR              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    GT              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    GE              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    LT              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    LE              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    EQ              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    NE              reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    RPAREN          reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 51 (expression -> SQRT LPAREN expression RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID COLON ID msgarg . SEMI ID
   yacc.py:2566:
   yacc.py:2687:    SEMI            shift and go to state 132
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (11) msgarg -> LPAREN . exp RPAREN
   yacc.py:2565:    (12) msgarg -> LPAREN . RPAREN
   yacc.py:2565:    (13) exp -> . exp COMMA exp
   yacc.py:2565:    (14) exp -> . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 134
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    exp                            shift and go to state 133
   yacc.py:2714:    expression                     shift and go to state 135
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (18) function -> ID LPAREN funcargs . RPAREN
   yacc.py:2565:    (19) funcargs -> funcargs . COMMA funcargs
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 136
   yacc.py:2687:    COMMA           shift and go to state 137
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (20) funcargs -> expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 20 (funcargs -> expression .)
   yacc.py:2687:    COMMA           reduce using rule 20 (funcargs -> expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE . expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (23) gargs -> LSQUARE . expression RSQUARE ID
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    expression                     shift and go to state 138
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (21) guard -> ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 21 (guard -> ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs .)
   yacc.py:2687:    ID              reduce using rule 21 (guard -> ID EQUALS LSQUARE expression RSQUARE ID PLUS gargs .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID COLON ID msgarg SEMI . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 139
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (11) msgarg -> LPAREN exp . RPAREN
   yacc.py:2565:    (13) exp -> exp . COMMA exp
   yacc.py:2566:
   yacc.py:2687:    RPAREN          shift and go to state 140
   yacc.py:2687:    COMMA           shift and go to state 141
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (12) msgarg -> LPAREN RPAREN .
   yacc.py:2566:
   yacc.py:2687:    SEMI            reduce using rule 12 (msgarg -> LPAREN RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (14) exp -> expression .
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 14 (exp -> expression .)
   yacc.py:2687:    COMMA           reduce using rule 14 (exp -> expression .)
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (18) function -> ID LPAREN funcargs RPAREN .
   yacc.py:2566:
   yacc.py:2687:    RPAREN          reduce using rule 18 (function -> ID LPAREN funcargs RPAREN .)
   yacc.py:2687:    COMMA           reduce using rule 18 (function -> ID LPAREN funcargs RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (19) funcargs -> funcargs COMMA . funcargs
   yacc.py:2565:    (19) funcargs -> . funcargs COMMA funcargs
   yacc.py:2565:    (20) funcargs -> . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    funcargs                       shift and go to state 142
   yacc.py:2714:    expression                     shift and go to state 129
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE expression . RSQUARE ID PLUS gargs
   yacc.py:2565:    (23) gargs -> LSQUARE expression . RSQUARE ID
   yacc.py:2565:    (34) expression -> expression . PLUS expression
   yacc.py:2565:    (35) expression -> expression . MINUS expression
   yacc.py:2565:    (36) expression -> expression . TIMES expression
   yacc.py:2565:    (37) expression -> expression . DIVIDE expression
   yacc.py:2565:    (38) expression -> expression . MOD expression
   yacc.py:2565:    (39) expression -> expression . AND expression
   yacc.py:2565:    (40) expression -> expression . OR expression
   yacc.py:2565:    (41) expression -> expression . GT expression
   yacc.py:2565:    (42) expression -> expression . GE expression
   yacc.py:2565:    (43) expression -> expression . LT expression
   yacc.py:2565:    (44) expression -> expression . LE expression
   yacc.py:2565:    (45) expression -> expression . EQ expression
   yacc.py:2565:    (46) expression -> expression . NE expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         shift and go to state 143
   yacc.py:2687:    PLUS            shift and go to state 60
   yacc.py:2687:    MINUS           shift and go to state 61
   yacc.py:2687:    TIMES           shift and go to state 62
   yacc.py:2687:    DIVIDE          shift and go to state 63
   yacc.py:2687:    MOD             shift and go to state 64
   yacc.py:2687:    AND             shift and go to state 65
   yacc.py:2687:    OR              shift and go to state 66
   yacc.py:2687:    GT              shift and go to state 67
   yacc.py:2687:    GE              shift and go to state 68
   yacc.py:2687:    LT              shift and go to state 69
   yacc.py:2687:    LE              shift and go to state 70
   yacc.py:2687:    EQ              shift and go to state 71
   yacc.py:2687:    NE              shift and go to state 72
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (10) message -> ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 10 (message -> ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID .)
   yacc.py:2687:    ID              reduce using rule 10 (message -> ID EQUALS ID ARROW ID COLON ID msgarg SEMI ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (11) msgarg -> LPAREN exp RPAREN .
   yacc.py:2566:
   yacc.py:2687:    SEMI            reduce using rule 11 (msgarg -> LPAREN exp RPAREN .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (13) exp -> exp COMMA . exp
   yacc.py:2565:    (13) exp -> . exp COMMA exp
   yacc.py:2565:    (14) exp -> . expression
   yacc.py:2565:    (34) expression -> . expression PLUS expression
   yacc.py:2565:    (35) expression -> . expression MINUS expression
   yacc.py:2565:    (36) expression -> . expression TIMES expression
   yacc.py:2565:    (37) expression -> . expression DIVIDE expression
   yacc.py:2565:    (38) expression -> . expression MOD expression
   yacc.py:2565:    (39) expression -> . expression AND expression
   yacc.py:2565:    (40) expression -> . expression OR expression
   yacc.py:2565:    (41) expression -> . expression GT expression
   yacc.py:2565:    (42) expression -> . expression GE expression
   yacc.py:2565:    (43) expression -> . expression LT expression
   yacc.py:2565:    (44) expression -> . expression LE expression
   yacc.py:2565:    (45) expression -> . expression EQ expression
   yacc.py:2565:    (46) expression -> . expression NE expression
   yacc.py:2565:    (47) expression -> . SIN LPAREN expression RPAREN
   yacc.py:2565:    (48) expression -> . COS LPAREN expression RPAREN
   yacc.py:2565:    (49) expression -> . TAN LPAREN expression RPAREN
   yacc.py:2565:    (50) expression -> . ABS LPAREN expression RPAREN
   yacc.py:2565:    (51) expression -> . SQRT LPAREN expression RPAREN
   yacc.py:2565:    (52) expression -> . ID LPAREN expression RPAREN
   yacc.py:2565:    (53) expression -> . LPAREN expression RPAREN
   yacc.py:2565:    (54) expression -> . ICONST
   yacc.py:2565:    (55) expression -> . DCONST
   yacc.py:2565:    (56) expression -> . SCONST
   yacc.py:2565:    (57) expression -> . BCONST
   yacc.py:2565:    (58) expression -> . ID
   yacc.py:2565:    (59) expression -> . ID DOT ID
   yacc.py:2565:    (60) expression -> . NOT expression
   yacc.py:2565:    (61) expression -> . MINUS expression
   yacc.py:2566:
   yacc.py:2687:    SIN             shift and go to state 35
   yacc.py:2687:    COS             shift and go to state 37
   yacc.py:2687:    TAN             shift and go to state 38
   yacc.py:2687:    ABS             shift and go to state 39
   yacc.py:2687:    SQRT            shift and go to state 40
   yacc.py:2687:    ID              shift and go to state 32
   yacc.py:2687:    LPAREN          shift and go to state 36
   yacc.py:2687:    ICONST          shift and go to state 41
   yacc.py:2687:    DCONST          shift and go to state 42
   yacc.py:2687:    SCONST          shift and go to state 43
   yacc.py:2687:    BCONST          shift and go to state 44
   yacc.py:2687:    NOT             shift and go to state 45
   yacc.py:2687:    MINUS           shift and go to state 34
   yacc.py:2689:
   yacc.py:2714:    exp                            shift and go to state 144
   yacc.py:2714:    expression                     shift and go to state 135
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (19) funcargs -> funcargs COMMA funcargs .
   yacc.py:2565:    (19) funcargs -> funcargs . COMMA funcargs
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for COMMA resolved as shift
   yacc.py:2687:    RPAREN          reduce using rule 19 (funcargs -> funcargs COMMA funcargs .)
   yacc.py:2687:    COMMA           shift and go to state 137
   yacc.py:2689:
   yacc.py:2696:  ! COMMA           [ reduce using rule 19 (funcargs -> funcargs COMMA funcargs .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE expression RSQUARE . ID PLUS gargs
   yacc.py:2565:    (23) gargs -> LSQUARE expression RSQUARE . ID
   yacc.py:2566:
   yacc.py:2687:    ID              shift and go to state 145
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (13) exp -> exp COMMA exp .
   yacc.py:2565:    (13) exp -> exp . COMMA exp
   yacc.py:2566:
   yacc.py:2666:  ! shift/reduce conflict for COMMA resolved as shift
   yacc.py:2687:    RPAREN          reduce using rule 13 (exp -> exp COMMA exp .)
   yacc.py:2687:    COMMA           shift and go to state 141
   yacc.py:2689:
   yacc.py:2696:  ! COMMA           [ reduce using rule 13 (exp -> exp COMMA exp .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE expression RSQUARE ID . PLUS gargs
   yacc.py:2565:    (23) gargs -> LSQUARE expression RSQUARE ID .
   yacc.py:2566:
   yacc.py:2687:    PLUS            shift and go to state 146
   yacc.py:2687:    IN              reduce using rule 23 (gargs -> LSQUARE expression RSQUARE ID .)
   yacc.py:2687:    ID              reduce using rule 23 (gargs -> LSQUARE expression RSQUARE ID .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE expression RSQUARE ID PLUS . gargs
   yacc.py:2565:    (22) gargs -> . LSQUARE expression RSQUARE ID PLUS gargs
   yacc.py:2565:    (23) gargs -> . LSQUARE expression RSQUARE ID
   yacc.py:2566:
   yacc.py:2687:    LSQUARE         shift and go to state 130
   yacc.py:2689:
   yacc.py:2714:    gargs                          shift and go to state 147
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (22) gargs -> LSQUARE expression RSQUARE ID PLUS gargs .
   yacc.py:2566:
   yacc.py:2687:    IN              reduce using rule 22 (gargs -> LSQUARE expression RSQUARE ID PLUS gargs .)
   yacc.py:2687:    ID              reduce using rule 22 (gargs -> LSQUARE expression RSQUARE ID PLUS gargs .)
   yacc.py:2689:
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for ID in state 17 resolved as shift
   yacc.py:3462:shift/reduce conflict for COMMA in state 91 resolved as shift
   yacc.py:3462:shift/reduce conflict for COMMA in state 142 resolved as shift
   yacc.py:3462:shift/reduce conflict for COMMA in state 144 resolved as shift
