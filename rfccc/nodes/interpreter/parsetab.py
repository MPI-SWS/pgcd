
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftANDORLTLEGTGEEQNErightNOTleftPLUSMINUSleftTIMESDIVIDEMODleftPOWrightUMINUSSINTANCOSABSABS AND BCONST COLON COMMA COMPONENT_ID COS DCONST DIVIDE DOT ELSE EQ EQUALS EXIT GE GT ICONST ID IF LBRACE LE LPAREN LT MINUS MOD MOTION MSGTYPE NE NOT OR PLUS POW PRINT RBRACE RECEIVE RPAREN SCONST SEMI SEND SIN SKIP SQRT TAN TIMES WHILE statement : statement SEMI statement\n                      | receive\n                      | send\n                      | if\n                      | while\n                      | assign\n                      | motion\n                      | print\n                      | skip\n                      | exit receive   : RECEIVE LPAREN motion RPAREN  LBRACE actions RBRACEsend : SEND LPAREN COMPONENT_ID COMMA MSGTYPE COMMA args RPARENif : IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEwhile : WHILE LPAREN expression RPAREN LBRACE statement RBRACE assign : ID EQUALS expression  motion : MOTION LPAREN args RPAREN\n                   | MOTION print : PRINT LPAREN SCONST RPAREN\n                 | PRINT LPAREN args RPARENskip : SKIPexit : EXIT LPAREN expression RPAREN actions : actions COMMA actions\n                    | LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPAREN args : expression COMMA args\n                | expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression MOD expression\n                  | expression POW expression\n                  | expression AND expression\n                  | expression OR expression\n                  | expression GT expression\n                  | expression GE expression\n                  | expression LT expression\n                  | expression LE expression\n                  | expression EQ expression\n                  | expression NE expressionexpression : SIN LPAREN expression RPAREN\n                      | COS LPAREN expression RPAREN\n                      | TAN LPAREN expression RPAREN\n                      | ABS LPAREN expression RPAREN\n                      | SQRT LPAREN expression RPAREN\n                      | ID LPAREN args RPARENexpression : LPAREN expression RPARENexpression : ICONST\n                      | DCONST\n                      | SCONST\n                      | BCONSTexpression : ID\n                      | NOT expression\n                      | MINUS expression %prec UMINUS'
    
_lr_action_items = {'RECEIVE':([0,20,88,109,133,136,],[11,11,11,11,11,11,]),'SEND':([0,20,88,109,133,136,],[12,12,12,12,12,12,]),'IF':([0,20,88,109,133,136,],[13,13,13,13,13,13,]),'WHILE':([0,20,88,109,133,136,],[14,14,14,14,14,14,]),'ID':([0,20,23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,88,109,113,128,133,136,],[15,15,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,15,15,40,132,15,15,]),'MOTION':([0,20,21,88,109,133,136,],[16,16,16,16,16,16,16,]),'PRINT':([0,20,88,109,133,136,],[17,17,17,17,17,17,]),'SKIP':([0,20,88,109,133,136,],[18,18,18,18,18,18,]),'EXIT':([0,20,88,109,133,136,],[19,19,19,19,19,19,]),'$end':([1,2,3,4,5,6,7,8,9,10,16,18,29,40,41,42,43,44,47,71,78,80,82,83,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,115,116,117,118,119,120,123,127,130,137,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-17,-20,-1,-51,-47,-48,-49,-50,-15,-53,-52,-16,-18,-19,-21,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-11,-14,-12,-13,]),'SEMI':([1,2,3,4,5,6,7,8,9,10,16,18,29,40,41,42,43,44,47,71,78,80,82,83,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,114,115,116,117,118,119,120,121,123,127,130,135,137,138,],[20,-2,-3,-4,-5,-6,-7,-8,-9,-10,-17,-20,20,-51,-47,-48,-49,-50,-15,-53,-52,-16,-18,-19,-21,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,20,-40,-41,-42,-43,-44,-45,20,-11,-14,-12,20,-13,20,]),'RBRACE':([2,3,4,5,6,7,8,9,10,16,18,29,40,41,42,43,44,47,71,78,80,82,83,84,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,114,115,116,117,118,119,120,121,123,127,129,130,135,137,138,140,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,-17,-20,-1,-51,-47,-48,-49,-50,-15,-53,-52,-16,-18,-19,-21,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,123,126,-40,-41,-42,-43,-44,-45,127,-11,-14,-22,-12,137,-13,139,-23,]),'LPAREN':([11,12,13,14,16,17,19,23,24,25,26,27,28,32,34,35,36,37,38,39,40,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,85,113,124,],[21,22,23,24,26,27,28,32,32,32,32,32,32,32,32,72,73,74,75,76,77,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,111,32,111,]),'EQUALS':([15,],[25,]),'RPAREN':([16,30,33,40,41,42,43,44,46,48,49,50,51,52,55,71,78,80,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,115,116,117,118,119,120,125,139,],[-17,53,56,-51,-47,-48,-49,-50,79,80,-25,82,83,84,87,-53,-52,-16,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,115,116,117,118,119,120,-24,-40,-41,-42,-43,-44,-45,130,140,]),'COMPONENT_ID':([22,],[31,]),'SIN':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'COS':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'TAN':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ABS':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'SQRT':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'ICONST':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'DCONST':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'SCONST':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[43,43,43,43,50,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'BCONST':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'NOT':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'MINUS':([23,24,25,26,27,28,32,33,34,40,41,42,43,44,45,46,47,49,50,52,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,115,116,117,118,119,120,],[34,34,34,34,34,34,34,58,34,-51,-47,-48,-49,-50,34,58,58,58,-49,58,58,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-53,34,34,34,34,34,34,58,34,-46,-26,-27,-28,-29,-30,-31,58,58,58,58,58,58,58,58,58,58,58,58,58,34,-40,-41,-42,-43,-44,-45,]),'COMMA':([31,40,41,42,43,44,49,50,71,78,86,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,112,115,116,117,118,119,120,122,129,132,140,],[54,-51,-47,-48,-49,-50,81,-49,-53,-52,113,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,124,-40,-41,-42,-43,-44,-45,128,124,134,-23,]),'PLUS':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[57,-51,-47,-48,-49,-50,57,57,57,-49,57,57,-53,57,-46,-26,-27,-28,-29,-30,-31,57,57,57,57,57,57,57,57,57,57,57,57,57,-40,-41,-42,-43,-44,-45,]),'TIMES':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[59,-51,-47,-48,-49,-50,59,59,59,-49,59,59,-53,59,-46,59,59,-28,-29,-30,-31,59,59,59,59,59,59,59,59,59,59,59,59,59,-40,-41,-42,-43,-44,-45,]),'DIVIDE':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[60,-51,-47,-48,-49,-50,60,60,60,-49,60,60,-53,60,-46,60,60,-28,-29,-30,-31,60,60,60,60,60,60,60,60,60,60,60,60,60,-40,-41,-42,-43,-44,-45,]),'MOD':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[61,-51,-47,-48,-49,-50,61,61,61,-49,61,61,-53,61,-46,61,61,-28,-29,-30,-31,61,61,61,61,61,61,61,61,61,61,61,61,61,-40,-41,-42,-43,-44,-45,]),'POW':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[62,-51,-47,-48,-49,-50,62,62,62,-49,62,62,-53,62,-46,62,62,62,62,62,-31,62,62,62,62,62,62,62,62,62,62,62,62,62,-40,-41,-42,-43,-44,-45,]),'AND':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[63,-51,-47,-48,-49,-50,63,63,63,-49,63,63,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,63,63,63,63,63,-40,-41,-42,-43,-44,-45,]),'OR':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[64,-51,-47,-48,-49,-50,64,64,64,-49,64,64,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,64,64,64,64,64,-40,-41,-42,-43,-44,-45,]),'GT':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[65,-51,-47,-48,-49,-50,65,65,65,-49,65,65,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,65,65,65,65,65,-40,-41,-42,-43,-44,-45,]),'GE':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[66,-51,-47,-48,-49,-50,66,66,66,-49,66,66,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,66,66,66,66,66,-40,-41,-42,-43,-44,-45,]),'LT':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[67,-51,-47,-48,-49,-50,67,67,67,-49,67,67,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,67,67,67,67,67,-40,-41,-42,-43,-44,-45,]),'LE':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[68,-51,-47,-48,-49,-50,68,68,68,-49,68,68,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,68,68,68,68,68,-40,-41,-42,-43,-44,-45,]),'EQ':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[69,-51,-47,-48,-49,-50,69,69,69,-49,69,69,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,69,69,69,69,69,-40,-41,-42,-43,-44,-45,]),'NE':([33,40,41,42,43,44,46,47,49,50,52,55,71,78,87,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,115,116,117,118,119,120,],[70,-51,-47,-48,-49,-50,70,70,70,-49,70,70,-53,-52,-46,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,70,70,70,70,70,-40,-41,-42,-43,-44,-45,]),'LBRACE':([53,56,79,131,134,],[85,88,109,133,136,]),'MSGTYPE':([54,111,],[86,122,]),'ELSE':([126,],[131,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,20,88,109,133,136,],[1,29,114,121,135,138,]),'receive':([0,20,88,109,133,136,],[2,2,2,2,2,2,]),'send':([0,20,88,109,133,136,],[3,3,3,3,3,3,]),'if':([0,20,88,109,133,136,],[4,4,4,4,4,4,]),'while':([0,20,88,109,133,136,],[5,5,5,5,5,5,]),'assign':([0,20,88,109,133,136,],[6,6,6,6,6,6,]),'motion':([0,20,21,88,109,133,136,],[7,7,30,7,7,7,7,]),'print':([0,20,88,109,133,136,],[8,8,8,8,8,8,]),'skip':([0,20,88,109,133,136,],[9,9,9,9,9,9,]),'exit':([0,20,88,109,133,136,],[10,10,10,10,10,10,]),'expression':([23,24,25,26,27,28,32,34,45,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,77,81,113,],[33,46,47,49,49,52,55,71,78,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,49,49,49,]),'args':([26,27,77,81,113,],[48,51,108,110,125,]),'actions':([85,124,],[112,129,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement SEMI statement','statement',3,'p_statement_program','parser.py',38),
  ('statement -> receive','statement',1,'p_statement_program','parser.py',39),
  ('statement -> send','statement',1,'p_statement_program','parser.py',40),
  ('statement -> if','statement',1,'p_statement_program','parser.py',41),
  ('statement -> while','statement',1,'p_statement_program','parser.py',42),
  ('statement -> assign','statement',1,'p_statement_program','parser.py',43),
  ('statement -> motion','statement',1,'p_statement_program','parser.py',44),
  ('statement -> print','statement',1,'p_statement_program','parser.py',45),
  ('statement -> skip','statement',1,'p_statement_program','parser.py',46),
  ('statement -> exit','statement',1,'p_statement_program','parser.py',47),
  ('receive -> RECEIVE LPAREN motion RPAREN LBRACE actions RBRACE','receive',7,'p_receive_msg','parser.py',54),
  ('send -> SEND LPAREN COMPONENT_ID COMMA MSGTYPE COMMA args RPAREN','send',8,'p_send_msg','parser.py',58),
  ('if -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','if',11,'p_if_code','parser.py',62),
  ('while -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','while',7,'p_while_code','parser.py',66),
  ('assign -> ID EQUALS expression','assign',3,'p_assign_code','parser.py',70),
  ('motion -> MOTION LPAREN args RPAREN','motion',4,'p_motion_exec','parser.py',74),
  ('motion -> MOTION','motion',1,'p_motion_exec','parser.py',75),
  ('print -> PRINT LPAREN SCONST RPAREN','print',4,'p_print_function','parser.py',82),
  ('print -> PRINT LPAREN args RPAREN','print',4,'p_print_function','parser.py',83),
  ('skip -> SKIP','skip',1,'p_skip_function','parser.py',87),
  ('exit -> EXIT LPAREN expression RPAREN','exit',4,'p_exit_function','parser.py',91),
  ('actions -> actions COMMA actions','actions',3,'p_actions_tuple','parser.py',97),
  ('actions -> LPAREN MSGTYPE COMMA ID COMMA LBRACE statement RBRACE RPAREN','actions',9,'p_actions_tuple','parser.py',98),
  ('args -> expression COMMA args','args',3,'p_args_tuple','parser.py',105),
  ('args -> expression','args',1,'p_args_tuple','parser.py',106),
  ('expression -> expression PLUS expression','expression',3,'p_expression_ft','parser.py',115),
  ('expression -> expression MINUS expression','expression',3,'p_expression_ft','parser.py',116),
  ('expression -> expression TIMES expression','expression',3,'p_expression_ft','parser.py',117),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_ft','parser.py',118),
  ('expression -> expression MOD expression','expression',3,'p_expression_ft','parser.py',119),
  ('expression -> expression POW expression','expression',3,'p_expression_ft','parser.py',120),
  ('expression -> expression AND expression','expression',3,'p_expression_ft','parser.py',121),
  ('expression -> expression OR expression','expression',3,'p_expression_ft','parser.py',122),
  ('expression -> expression GT expression','expression',3,'p_expression_ft','parser.py',123),
  ('expression -> expression GE expression','expression',3,'p_expression_ft','parser.py',124),
  ('expression -> expression LT expression','expression',3,'p_expression_ft','parser.py',125),
  ('expression -> expression LE expression','expression',3,'p_expression_ft','parser.py',126),
  ('expression -> expression EQ expression','expression',3,'p_expression_ft','parser.py',127),
  ('expression -> expression NE expression','expression',3,'p_expression_ft','parser.py',128),
  ('expression -> SIN LPAREN expression RPAREN','expression',4,'p_expression_nd','parser.py',161),
  ('expression -> COS LPAREN expression RPAREN','expression',4,'p_expression_nd','parser.py',162),
  ('expression -> TAN LPAREN expression RPAREN','expression',4,'p_expression_nd','parser.py',163),
  ('expression -> ABS LPAREN expression RPAREN','expression',4,'p_expression_nd','parser.py',164),
  ('expression -> SQRT LPAREN expression RPAREN','expression',4,'p_expression_nd','parser.py',165),
  ('expression -> ID LPAREN args RPAREN','expression',4,'p_expression_nd','parser.py',166),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_rd','parser.py',183),
  ('expression -> ICONST','expression',1,'p_expression_4th','parser.py',187),
  ('expression -> DCONST','expression',1,'p_expression_4th','parser.py',188),
  ('expression -> SCONST','expression',1,'p_expression_4th','parser.py',189),
  ('expression -> BCONST','expression',1,'p_expression_4th','parser.py',190),
  ('expression -> ID','expression',1,'p_expression_5th','parser.py',194),
  ('expression -> NOT expression','expression',2,'p_expression_5th','parser.py',195),
  ('expression -> MINUS expression','expression',2,'p_expression_5th','parser.py',196),
]
